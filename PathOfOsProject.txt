Difference between Process and thread.
	Threads (of the same process) run in a shared memory space, while processes run in separate memory spaces.
	Process
		Each process is provided the resources to execute a program. 
		A process has a virtual address space, executable code, open handles to system objects, 
		a security context, a unique process identifier, environment variables, a priority class, 
		minimum and maximum working set sizes, 
		and at least one thread of execution. 
		Each process is started with a single thread, often called the primary thread, 
		but can create additional threads from any of its threads.
	Threads
		A thread is the entity within a process that can be scheduled for execution. 
		All threads of a process share its virtual address space and system resources. 
		In addition, each thread maintains exception handlers, a scheduling priority, 
		thread local storage, a unique thread identifier, and a set of structures 
		the system will use to save the thread context until it is scheduled. 
		The thread context includes the thread's set of machine registers, 
		the kernel stack, a thread environment block, and a user stack in the address 
		space of the thread's process.

Reason for context switching
	System Call (Interrupt)
	Scheduler swaps the process
	IO Call
	When higher priority process has become ready to run
	Sometimes when Mode switch occur.
	
Dispatcher
	Receive control in Kernel Mode as interrupt or IO or system call
	then switch the context
	switch to user mode
	
Scheduling Algorithm
	FIFO
	Earliest deadline first
	short time remaining
	Fixed priority pre-emptive scheduling
	Round-robin